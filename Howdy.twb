<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1231.1350                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource inline='true' name='_WWReachv8' version='8.2'>
      <connection authentication='sspi' class='sqlserver' dbname='WWReach' server='.'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactDailyResponse].[Vendor_Key]'>
              </expression>
              <expression op='[DimVendor].[Vendor_Key]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactDailyResponse].[Response_Type_Key]'>
                </expression>
                <expression op='[DimResponseType].[Response_Type_Key]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactDailyResponse].[Placement_Key]'>
                  </expression>
                  <expression op='[DimPlacement].[Placement_Key]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[FactDailyResponse].[Event_Key]'>
                    </expression>
                    <expression op='[DimEvent].[Event_Key]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[FactDailyResponse].[Date_Key]'>
                      </expression>
                      <expression op='[DimDate].[Date_Key]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[FactDailyResponse].[Creative_Key]'>
                        </expression>
                        <expression op='[DimCreative].[Creative_Key]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[FactDailyResponse].[Client_Key]'>
                          </expression>
                          <expression op='[DimClient].[Client_Key]'>
                          </expression>
                        </expression>
                      </clause>
                      <relation join='inner' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[FactDailyResponse].[Campaign_Key]'>
                            </expression>
                            <expression op='[DimCampaign].[Campaign_Key]'>
                            </expression>
                          </expression>
                        </clause>
                        <relation join='inner' type='join'>
                          <clause type='join'>
                            <expression op='='>
                              <expression op='[FactDailyResponse].[Ad_Key]'>
                              </expression>
                              <expression op='[DimAd].[Ad_Key]'>
                              </expression>
                            </expression>
                          </clause>
                          <relation name='FactDailyResponse' table='[dbo].[FactDailyResponse]' type='table' />
                          <relation name='DimAd' table='[dbo].[DimAd]' type='table' />
                        </relation>
                        <relation name='DimCampaign' table='[dbo].[DimCampaign]' type='table' />
                      </relation>
                      <relation name='DimClient' table='[dbo].[DimClient]' type='table' />
                    </relation>
                    <relation name='DimCreative' table='[dbo].[DimCreative]' type='table' />
                  </relation>
                  <relation name='DimDate' table='[dbo].[DimDate]' type='table' />
                </relation>
                <relation name='DimEvent' table='[dbo].[DimEvent]' type='table' />
              </relation>
              <relation name='DimPlacement' table='[dbo].[DimPlacement]' type='table' />
            </relation>
            <relation name='DimResponseType' table='[dbo].[DimResponseType]' type='table' />
          </relation>
          <relation name='DimVendor' table='[dbo].[DimVendor]' type='table' />
        </relation>
        <cols>
          <map key='[Ad_Key]' value='[FactDailyResponse].[Ad_Key]' />
          <map key='[Ad_Type_Name]' value='[DimPlacement].[Ad_Type_Name]' />
          <map key='[AgencyTypes]' value='[DimClient].[AgencyTypes]' />
          <map key='[BI_WEEKLY_1_DT]' value='[DimDate].[BI_WEEKLY_1_DT]' />
          <map key='[BI_WEEKLY_1_KEY]' value='[DimDate].[BI_WEEKLY_1_KEY]' />
          <map key='[BI_WEEKLY_2_DT]' value='[DimDate].[BI_WEEKLY_2_DT]' />
          <map key='[BI_WEEKLY_2_KEY]' value='[DimDate].[BI_WEEKLY_2_KEY]' />
          <map key='[Buy_Model_Name]' value='[DimPlacement].[Buy_Model_Name]' />
          <map key='[CAMPAIGN_LAST_PL_END_DT]' value='[DimCampaign].[CAMPAIGN_LAST_PL_END_DT]' />
          <map key='[CAMPAIGN_LEAST_PL_START_DT]' value='[DimCampaign].[CAMPAIGN_LEAST_PL_START_DT]' />
          <map key='[Calculated Cost]' value='[FactDailyResponse].[Calculated Cost]' />
          <map key='[Campaign_Country]' value='[DimCampaign].[Campaign_Country]' />
          <map key='[Campaign_Key]' value='[FactDailyResponse].[Campaign_Key]' />
          <map key='[Campaign_Location]' value='[DimCampaign].[Campaign_Location]' />
          <map key='[Campaign_Name]' value='[DimCampaign].[Campaign_Name]' />
          <map key='[Campaign_Region]' value='[DimCampaign].[Campaign_Region]' />
          <map key='[Clicks]' value='[FactDailyResponse].[Clicks]' />
          <map key='[Client_Country]' value='[DimClient].[Client_Country]' />
          <map key='[Client_Id]' value='[DimPlacement].[Client_Id]' />
          <map key='[Client_Key]' value='[FactDailyResponse].[Client_Key]' />
          <map key='[Client_Location]' value='[DimClient].[Client_Location]' />
          <map key='[Client_Name]' value='[DimClient].[Client_Name]' />
          <map key='[Client_Network_Name]' value='[DimClient].[Client_Network_Name]' />
          <map key='[Client_Region]' value='[DimClient].[Client_Region]' />
          <map key='[Client_Url]' value='[DimClient].[Client_Url]' />
          <map key='[Creative_Dimensions]' value='[DimCreative].[Creative_Dimensions]' />
          <map key='[Creative_File_Name]' value='[DimCreative].[Creative_File_Name]' />
          <map key='[Creative_File_Size]' value='[DimCreative].[Creative_File_Size]' />
          <map key='[Creative_Key]' value='[FactDailyResponse].[Creative_Key]' />
          <map key='[Creative_Message]' value='[DimCreative].[Creative_Message]' />
          <map key='[Creative_Name]' value='[DimCreative].[Creative_Name]' />
          <map key='[Creative_Type]' value='[DimCreative].[Creative_Type]' />
          <map key='[Date_As_Int]' value='[DimDate].[Date_As_Int]' />
          <map key='[Date_Key]' value='[FactDailyResponse].[Date_Key]' />
          <map key='[Day_Of_Month_No]' value='[DimDate].[Day_Of_Month_No]' />
          <map key='[Day_Of_Week_Short]' value='[DimDate].[Day_Of_Week_Short]' />
          <map key='[Day_Of_week_Name]' value='[DimDate].[Day_Of_week_Name]' />
          <map key='[DimAd_Ad_Key_1]' value='[DimAd].[Ad_Key]' />
          <map key='[DimAd_Click_Through_URL]' value='[DimAd].[Click_Through_URL]' />
          <map key='[DimAd_DFA_Ad_Name]' value='[DimAd].[DFA_Ad_Name]' />
          <map key='[DimAd_DFA_Buy_Name]' value='[DimAd].[DFA_Buy_Name]' />
          <map key='[DimAd_DFA_Creative_Name]' value='[DimAd].[DFA_Creative_Name]' />
          <map key='[DimAd_DFA_Section_Name]' value='[DimAd].[DFA_Section_Name]' />
          <map key='[DimAd_DFA_Site_Name]' value='[DimAd].[DFA_Site_Name]' />
          <map key='[DimAd_PARSED_CITY]' value='[DimAd].[PARSED_CITY]' />
          <map key='[DimAd_PARSED_COUNTRY]' value='[DimAd].[PARSED_COUNTRY]' />
          <map key='[DimAd_PARSED_STATE]' value='[DimAd].[PARSED_STATE]' />
          <map key='[DimCampaign_Campaign_Key]' value='[DimCampaign].[Campaign_Key]' />
          <map key='[DimClient_Client_Key]' value='[DimClient].[Client_Key]' />
          <map key='[DimCreative_Creative_Key]' value='[DimCreative].[Creative_Key]' />
          <map key='[DimDate_Date_Key]' value='[DimDate].[Date_Key]' />
          <map key='[DimEvent_Event_Key]' value='[DimEvent].[Event_Key]' />
          <map key='[DimPlacement_Placement_Key]' value='[DimPlacement].[Placement_Key]' />
          <map key='[DimResponseType_Response_Type_Key]' value='[DimResponseType].[Response_Type_Key]' />
          <map key='[DimVendor_Vendor_Key]' value='[DimVendor].[Vendor_Key]' />
          <map key='[Direct Itinerary Tix]' value='[FactDailyResponse].[Direct Itinerary Tix]' />
          <map key='[Direct PNR]' value='[FactDailyResponse].[Direct PNR]' />
          <map key='[Direct Sales]' value='[FactDailyResponse].[Direct Sales]' />
          <map key='[Event_Key]' value='[FactDailyResponse].[Event_Key]' />
          <map key='[Event_Type_Name]' value='[DimEvent].[Event_Type_Name]' />
          <map key='[Full_SQL_Date]' value='[DimDate].[Full_SQL_Date]' />
          <map key='[Impressions]' value='[FactDailyResponse].[Impressions]' />
          <map key='[Indirect Itinerary Tix]' value='[FactDailyResponse].[Indirect Itinerary Tix]' />
          <map key='[Indirect PNR]' value='[FactDailyResponse].[Indirect PNR]' />
          <map key='[Indirect Sales]' value='[FactDailyResponse].[Indirect Sales]' />
          <map key='[Month_Dt]' value='[DimDate].[Month_Dt]' />
          <map key='[Month_Key]' value='[DimDate].[Month_Key]' />
          <map key='[Month_Name]' value='[DimDate].[Month_Name]' />
          <map key='[Month_Of_Year_No]' value='[DimDate].[Month_Of_Year_No]' />
          <map key='[Month_Short]' value='[DimDate].[Month_Short]' />
          <map key='[Month_of_Quarter_No]' value='[DimDate].[Month_of_Quarter_No]' />
          <map key='[Package_Name]' value='[DimPlacement].[Package_Name]' />
          <map key='[Placement_Dimensions]' value='[DimPlacement].[Placement_Dimensions]' />
          <map key='[Placement_End_Dt]' value='[DimPlacement].[Placement_End_Dt]' />
          <map key='[Placement_Key]' value='[FactDailyResponse].[Placement_Key]' />
          <map key='[Placement_Name]' value='[DimPlacement].[Placement_Name]' />
          <map key='[Placement_Start_Dt]' value='[DimPlacement].[Placement_Start_Dt]' />
          <map key='[Platform_Name]' value='[DimPlacement].[Platform_Name]' />
          <map key='[Pricing_Type_Name]' value='[DimPlacement].[Pricing_Type_Name]' />
          <map key='[Quarter]' value='[DimDate].[Quarter]' />
          <map key='[Response_Group]' value='[DimResponseType].[Response_Group]' />
          <map key='[Response_Type]' value='[DimResponseType].[Response_Type]' />
          <map key='[Response_Type_Key]' value='[FactDailyResponse].[Response_Type_Key]' />
          <map key='[Spotlight_Category]' value='[DimEvent].[Spotlight_Category]' />
          <map key='[Spotlight_Name]' value='[DimEvent].[Spotlight_Name]' />
          <map key='[Spotlight_Note]' value='[DimEvent].[Spotlight_Note]' />
          <map key='[Spotlight_Type]' value='[DimEvent].[Spotlight_Type]' />
          <map key='[Spotlight_role]' value='[DimEvent].[Spotlight_role]' />
          <map key='[Target_Market]' value='[DimPlacement].[Target_Market]' />
          <map key='[Technology_Type_Name]' value='[DimCreative].[Technology_Type_Name]' />
          <map key='[Unit_Type]' value='[DimPlacement].[Unit_Type]' />
          <map key='[Vendor_Key]' value='[FactDailyResponse].[Vendor_Key]' />
          <map key='[Vendor_Name]' value='[DimVendor].[Vendor_Name]' />
          <map key='[Vendor_URL]' value='[DimVendor].[Vendor_URL]' />
          <map key='[WEEK_KEY]' value='[DimDate].[WEEK_KEY]' />
          <map key='[Week_Start_Mon_Dt]' value='[DimDate].[Week_Start_Mon_Dt]' />
          <map key='[Week_Start_Sun_Dt]' value='[DimDate].[Week_Start_Sun_Dt]' />
          <map key='[Year]' value='[DimDate].[Year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Ad_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='datetime' hidden='true' name='[BI_WEEKLY_1_DT]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[BI_WEEKLY_1_KEY]' role='measure' type='quantitative'>
      </column>
      <column datatype='datetime' hidden='true' name='[BI_WEEKLY_2_DT]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[BI_WEEKLY_2_KEY]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Clicks])/Sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Campaign Country' datatype='string' name='[Campaign_Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Campaign_Key]' role='dimension' type='ordinal'>
      </column>
      <column caption='Client Country' datatype='string' name='[Client_Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Client_Id]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Client_Key]' role='dimension' type='ordinal'>
      </column>
      <column caption='Client_City' datatype='string' name='[Client_Location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Creative_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[Date_As_Int]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Date_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[Day_Of_Month_No]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Day_Of_Week_Short]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Day_Of_week_Name]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimAd_Ad_Key_1]' role='dimension' type='ordinal'>
      </column>
      <column caption='City' datatype='string' name='[DimAd_PARSED_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[DimAd_PARSED_COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='Ad: State' datatype='string' name='[DimAd_PARSED_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimCampaign_Campaign_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimClient_Client_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimCreative_Creative_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimDate_Date_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimEvent_Event_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimPlacement_Placement_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimResponseType_Response_Type_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[DimVendor_Vendor_Key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Event_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='datetime' hidden='true' name='[Month_Dt]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[Month_Key]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Month_Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Month_Of_Year_No]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Month_Short]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Month_of_Quarter_No]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Placement_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[Quarter]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Response_Type_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' name='[Total Sales]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Direct Sales]) + SUM([Indirect Sales])' />
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Vendor_Key]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' hidden='true' name='[Vendor_Name (group) 1]' role='dimension' type='nominal'>
      </column>
      <column caption='Vendor Name (group)' datatype='string' hidden='true' name='[Vendor_Name (group)]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[WEEK_KEY]' role='measure' type='quantitative'>
      </column>
      <column datatype='datetime' hidden='true' name='[Week_Start_Mon_Dt]' role='dimension' type='ordinal'>
      </column>
      <column datatype='datetime' hidden='true' name='[Week_Start_Sun_Dt]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' hidden='true' name='[Year]' role='measure' type='quantitative'>
      </column>
      <drill-paths>
        <drill-path name='Client Hierarchy'>
          <field>[Vendor_Name]</field>
          <field>[Client_Network_Name]</field>
          <field>[Client_Name]</field>
          <field>[Campaign_Name]</field>
          <field>[Placement_Name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ttu\Documents\Demo\WWReachDemo\v8 SQL Server .tde' schema='Extract' tablename='Extract' update-time='7/22/2013 1:42:16 PM' updated-database='C:\Users\russch.SIMPLE\Desktop\File Trading\_Temp\WWDemo\_WW Reach...tde'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Ad_Type_Name]' value='[Extract].[Ad_Type_Name]' />
            <map key='[AgencyTypes]' value='[Extract].[AgencyTypes]' />
            <map key='[Buy_Model_Name]' value='[Extract].[Buy_Model_Name]' />
            <map key='[CAMPAIGN_LAST_PL_END_DT]' value='[Extract].[CAMPAIGN_LAST_PL_END_DT]' />
            <map key='[CAMPAIGN_LEAST_PL_START_DT]' value='[Extract].[CAMPAIGN_LEAST_PL_START_DT]' />
            <map key='[Calculated Cost]' value='[Extract].[Calculated Cost]' />
            <map key='[Campaign_Country]' value='[Extract].[Campaign_Country]' />
            <map key='[Campaign_Location]' value='[Extract].[Campaign_Location]' />
            <map key='[Campaign_Name]' value='[Extract].[Campaign_Name]' />
            <map key='[Campaign_Region]' value='[Extract].[Campaign_Region]' />
            <map key='[Clicks]' value='[Extract].[Clicks]' />
            <map key='[Client_Country]' value='[Extract].[Client_Country]' />
            <map key='[Client_Location]' value='[Extract].[Client_Location]' />
            <map key='[Client_Name]' value='[Extract].[Client_Name]' />
            <map key='[Client_Network_Name]' value='[Extract].[Client_Network_Name]' />
            <map key='[Client_Region]' value='[Extract].[Client_Region]' />
            <map key='[Client_Url]' value='[Extract].[Client_Url]' />
            <map key='[Creative_Dimensions]' value='[Extract].[Creative_Dimensions]' />
            <map key='[Creative_File_Name]' value='[Extract].[Creative_File_Name]' />
            <map key='[Creative_File_Size]' value='[Extract].[Creative_File_Size]' />
            <map key='[Creative_Message]' value='[Extract].[Creative_Message]' />
            <map key='[Creative_Name]' value='[Extract].[Creative_Name]' />
            <map key='[Creative_Type]' value='[Extract].[Creative_Type]' />
            <map key='[DimAd_Click_Through_URL]' value='[Extract].[Click_Through_URL]' />
            <map key='[DimAd_DFA_Ad_Name]' value='[Extract].[DFA_Ad_Name]' />
            <map key='[DimAd_DFA_Buy_Name]' value='[Extract].[DFA_Buy_Name]' />
            <map key='[DimAd_DFA_Creative_Name]' value='[Extract].[DFA_Creative_Name]' />
            <map key='[DimAd_DFA_Section_Name]' value='[Extract].[DFA_Section_Name]' />
            <map key='[DimAd_DFA_Site_Name]' value='[Extract].[DFA_Site_Name]' />
            <map key='[DimAd_PARSED_CITY]' value='[Extract].[PARSED_CITY]' />
            <map key='[DimAd_PARSED_COUNTRY]' value='[Extract].[PARSED_COUNTRY]' />
            <map key='[DimAd_PARSED_STATE]' value='[Extract].[PARSED_STATE]' />
            <map key='[Direct Itinerary Tix]' value='[Extract].[Direct Itinerary Tix]' />
            <map key='[Direct PNR]' value='[Extract].[Direct PNR]' />
            <map key='[Direct Sales]' value='[Extract].[Direct Sales]' />
            <map key='[Event_Type_Name]' value='[Extract].[Event_Type_Name]' />
            <map key='[Full_SQL_Date]' value='[Extract].[Full_SQL_Date]' />
            <map key='[Impressions]' value='[Extract].[Impressions]' />
            <map key='[Indirect Itinerary Tix]' value='[Extract].[Indirect Itinerary Tix]' />
            <map key='[Indirect PNR]' value='[Extract].[Indirect PNR]' />
            <map key='[Indirect Sales]' value='[Extract].[Indirect Sales]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Package_Name]' value='[Extract].[Package_Name]' />
            <map key='[Placement_Dimensions]' value='[Extract].[Placement_Dimensions]' />
            <map key='[Placement_End_Dt]' value='[Extract].[Placement_End_Dt]' />
            <map key='[Placement_Name]' value='[Extract].[Placement_Name]' />
            <map key='[Placement_Start_Dt]' value='[Extract].[Placement_Start_Dt]' />
            <map key='[Platform_Name]' value='[Extract].[Platform_Name]' />
            <map key='[Pricing_Type_Name]' value='[Extract].[Pricing_Type_Name]' />
            <map key='[Response_Group]' value='[Extract].[Response_Group]' />
            <map key='[Response_Type]' value='[Extract].[Response_Type]' />
            <map key='[Spotlight_Category]' value='[Extract].[Spotlight_Category]' />
            <map key='[Spotlight_Name]' value='[Extract].[Spotlight_Name]' />
            <map key='[Spotlight_Note]' value='[Extract].[Spotlight_Note]' />
            <map key='[Spotlight_Type]' value='[Extract].[Spotlight_Type]' />
            <map key='[Spotlight_role]' value='[Extract].[Spotlight_role]' />
            <map key='[Target_Market]' value='[Extract].[Target_Market]' />
            <map key='[Technology_Type_Name]' value='[Extract].[Technology_Type_Name]' />
            <map key='[Unit_Type]' value='[Extract].[Unit_Type]' />
            <map key='[Vendor_Name]' value='[Extract].[Vendor_Name]' />
            <map key='[Vendor_URL]' value='[Extract].[Vendor_URL]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3814026' timestamp-start='2013-07-22 13:42:16.262000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.473517' group-percentage='0.121822' measure-ordering='alphabetic' measure-percentage='0.404661' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource name='_WWReachv8' />
          </datasources>
          <datasource-dependencies datasource='_WWReachv8'>
            <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Clicks])/Sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Client_Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Client_Name]' derivation='None' name='[none:Client_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[_WWReachv8].[none:Client_Name:nk]' direction='DESC' using='[_WWReachv8].[sum:Impressions:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[_WWReachv8].[none:Client_Name:nk]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[_WWReachv8].[usr:CTR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[_WWReachv8].[none:Client_Name:nk]</rows>
        <cols>[_WWReachv8].[sum:Impressions:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource name='_WWReachv8' />
          </datasources>
          <datasource-dependencies datasource='_WWReachv8'>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Client_Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='datetime' name='[Full_SQL_Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Client_Name]' derivation='None' name='[none:Client_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Full_SQL_Date]' derivation='Month-Trunc' name='[tmn:Full_SQL_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[_WWReachv8].[tmn:Full_SQL_Date:ok]' />
            </encodings>
            <reference-line axis-column='[_WWReachv8].[sum:Clicks:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[_WWReachv8].[sum:Clicks:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[_WWReachv8].[sum:Clicks:qk]</rows>
        <cols>[_WWReachv8].[none:Client_Name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[_WWReachv8].[usr:CTR:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[_WWReachv8].[none:Client_Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[_WWReachv8].[none:Client_Name:nk]</field>
          <field>[_WWReachv8].[tmn:Full_SQL_Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='191'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
